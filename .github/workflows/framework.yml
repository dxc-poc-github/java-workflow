name: Java AKS Maven Workflow
on: 
  workflow_call:
    inputs:
      JAVA_VERSION:
        type: string 
        description: Java Version
        required: true
        default: '11'
      APP_NAME:
        type: string 
        description: APP_NAME
        required: false
        default: ''        
      MAVEN_OPTS:
        type: string 
        description: MAVEN_OPTS
        required: false
        default: ''
      MAVEN_GOALS:
        type: string 
        description: Maven Goals
        required: false
        default: ''
      MAVEN_POM_FILE:
        type: string 
        description: Maven POM File
        required: false
        default: ''
      ARTIFACTORY_USERNAME:
        type: string 
        description: ARTIFACTORY USER NAME
        required: false
        default: ''
      ARTIFACTORY_SETTINGS_XML_URL:
        type: string 
        description: ARTIFACTORY Settings XML Url
        required: false
        default: '' 
      ARTIFACTORY_PUBLISHER_USERNAME:
        type: string 
        description: ARTIFACTORY Publisher Name
        required: false
        default: ''         
      ACR_REGISTRY_NAME:
        required: false
        type: string         
      perform_unit_test:
        type: boolean 
        description: Junit Test
        default: True
      perform_integration_test:
        type: boolean 
        description: Integration Test
        default: False  
      perform_deploy:
        type: boolean 
        description: Deploy
        default: False 
      perform_docker_build:
        type: boolean 
        description: Deploy
        default: False         
      advanceSecurityEnabled:
        type: boolean 
        description: GitHub Advanced Security
        default: False        
    secrets:
      CODEQL_TOKEN:
        required: false 
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false
      ARTIFACTORY_PASSWORD:
        required: false
      ARTIFACTORY_PUBLISHER_PASSWORD:
        required: false
jobs:
  ci_phase:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ inputs.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: '${{ inputs.JAVA_VERSION }}'
          distribution: 'temurin'
          cache: maven
      - name: Download Settings XML
        if: ${{ inputs.ARTIFACTORY_SETTINGS_XML_URL }} && ${{ inputs.ARTIFACTORY_USERNAME }}
        run: |
          echo "Download started.."
          if [[ -f ${{ github.repository }}/settings.xml ]]
          then 
            echo "settings.xml already exists"
          else
            echo "downloading settings.xml from Artifactory"
            echo "downloading settings.xml from Artifactory"
            curl -u ${{ inputs.ARTIFACTORY_USERNAME }}:${{ secrets.ARTIFACTORY_PASSWORD }} -o ${{ github.repository }}/settings.xml ${{ inputs.ARTIFACTORY_SETTINGS_XML_URL }}
          fi
          echo "download completed"
      - name: Build Version
        id: version
        run: echo "::set-output name=buildVersion::$(date +'%Y%m%d'.$GITHUB_RUN_NUMBER)"          
      - name: Maven Build
        if: always()
        run: mvn --batch-mode --update-snapshots -f ${{ inputs.MAVEN_POM_FILE }} ${{ inputs.MAVEN_OPTS }} ${{ inputs.MAVEN_GOALS }}
      - name: Junit Test
        if: always()
        run: mvn --batch-mode --update-snapshots -f ${{ inputs.MAVEN_POM_FILE }} ${{ inputs.MAVEN_OPTS }} test
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files:
            target/surefire-reports/*.xml
          check_name: 'Test Results'        
      - name: 'Dependency Review'
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate        
      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar' 
      - name: Initialize CodeQL
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: github/codeql-action/init@v2
      - name: Autobuild
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: github/codeql-action/analyze@v2
      - name: Generate Security Report
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: rsdmike/github-security-report-action@v3.0.4
        with:
          token: ${{ secrets.CODEQL_TOKEN }}  
          sarifReportDir: "../results"
          outputDir: ${{ github.workspace }}
          repository: ${{ github.repository }}
      - name: Upload Security Report
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: actions/upload-artifact@v2
        with:
          name: security-report
          path: '${{ github.workspace }}/*.pdf'
